name: Release

on:
  push:
    tags: ['v*']
  workflow_dispatch:

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.release.outputs.id }}
    steps:
      - uses: actions/checkout@v4
      - name: Create Release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Kitty Plus ${{ github.ref }}
          draft: false
          prerelease: false

  build:
    needs: create-release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: linux-x86_64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            name: linux-x86_64-musl
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            name: windows-x86_64
          - os: macos-latest
            target: x86_64-apple-darwin
            name: macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            name: macos-aarch64
    
    runs-on: ${{ matrix.os }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      
      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev libssl-dev libgtk-3-dev
      
      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
      
      - name: Create Archive (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          tar -czf kitty-plus-${{ matrix.name }}.tar.gz kitty-plus
          echo "ASSET_PATH=target/${{ matrix.target }}/release/kitty-plus-${{ matrix.name }}.tar.gz" >> $GITHUB_ENV
          echo "ASSET_NAME=kitty-plus-${{ matrix.name }}.tar.gz" >> $GITHUB_ENV
      
      - name: Create Archive (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          7z a kitty-plus-${{ matrix.name }}.zip kitty-plus.exe
          echo "ASSET_PATH=target/${{ matrix.target }}/release/kitty-plus-${{ matrix.name }}.zip" >> $env:GITHUB_ENV
          echo "ASSET_NAME=kitty-plus-${{ matrix.name }}.zip" >> $env:GITHUB_ENV
      
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ env.ASSET_PATH }}
          asset_name: ${{ env.ASSET_NAME }}
          asset_content_type: application/octet-stream